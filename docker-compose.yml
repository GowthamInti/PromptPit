version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: llm_eval_postgres
    environment:
      POSTGRES_DB: llm_eval
      POSTGRES_USER: llm_user
      POSTGRES_PASSWORD: llm_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - llm_eval_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U llm_user -d llm_eval"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped



  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: llm_eval_backend
    environment:
      - DATABASE_URL=postgresql://llm_user:llm_password@postgres:5432/llm_eval
      - SECRET_KEY=your-secret-key-here-change-in-production
      - ENVIRONMENT=production
      - CORS_ORIGINS=http://localhost:3000,http://localhost:80,http://frontend:80
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/chroma_db:/app/chroma_db
    ports:
      - "8000:8000"
    networks:
      - llm_eval_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: llm_eval_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - NODE_ENV=production
    ports:
      - "80:80"
    networks:
      - llm_eval_network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s



volumes:
  postgres_data:
    driver: local

networks:
  llm_eval_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
