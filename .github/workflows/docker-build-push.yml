name: Build and Push Docker Images

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # Allow manual trigger

env:
  REGISTRY: docker.io
  IMAGE_NAME_BACKEND: 28101995/llm-eval-backend
  IMAGE_NAME_FRONTEND: 28101995/llm-eval-frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata for Backend
      id: meta-backend
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME_BACKEND }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-

    - name: Extract metadata for Frontend
      id: meta-frontend
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME_FRONTEND }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-

    - name: Build and push Backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-backend.outputs.tags }}
        labels: ${{ steps.meta-backend.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-frontend.outputs.tags }}
        labels: ${{ steps.meta-frontend.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Update docker-compose files with new tags
      if: github.event_name != 'pull_request'
      run: |
        # Update docker-compose.prod.yml
        sed -i "s|${{ env.IMAGE_NAME_BACKEND }}:.*|${{ env.IMAGE_NAME_BACKEND }}:${{ github.sha }}|g" docker-compose.prod.yml
        sed -i "s|${{ env.IMAGE_NAME_FRONTEND }}:.*|${{ env.IMAGE_NAME_FRONTEND }}:${{ github.sha }}|g" docker-compose.prod.yml
        
        # Update run-app.sh
        sed -i "s|${{ env.IMAGE_NAME_BACKEND }}:.*|${{ env.IMAGE_NAME_BACKEND }}:${{ github.sha }}|g" run-app.sh
        sed -i "s|${{ env.IMAGE_NAME_FRONTEND }}:.*|${{ env.IMAGE_NAME_FRONTEND }}:${{ github.sha }}|g" run-app.sh

    - name: Commit updated files
      if: github.event_name != 'pull_request'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docker-compose.prod.yml run-app.sh
        git commit -m "Update Docker image tags to ${{ github.sha }}" || echo "No changes to commit"
        git push || echo "No changes to push"

    - name: Output image info
      run: |
        echo "Backend image: ${{ steps.meta-backend.outputs.tags }}"
        echo "Frontend image: ${{ steps.meta-frontend.outputs.tags }}"
        echo "Pushed to Docker Hub: ${{ github.event_name != 'pull_request' }}"
